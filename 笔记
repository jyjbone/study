1.juqery.ajax
dataType (default: Intelligent Guess (xml, json, script, or html))
Type: String
The type of data that you're expecting back from the server.
If none is specified, jQuery will try to infer it based on the MIME type of the response (an XML MIME type will yield XML, in 1.4 JSON will yield a JavaScript object, in 1.4 script will execute the script, and anything else will be returned as a string).
The available types (and the result passed as the first argument to your success callback) are:
"xml": Returns a XML document that can be processed via jQuery. 
"html": Returns HTML as plain text; included script tags are evaluated when inserted in the DOM.
"script": Evaluates the response as JavaScript and returns it as plain text. Disables caching by appending a query string parameter, _=[TIMESTAMP], to the URL unless the cache option is set to true. Note: This will turn POSTs into GETs for remote-domain requests.
"json": Evaluates the response as JSON and returns a JavaScript object. Cross-domain "json" requests that have a callback placeholder, e.g. ?callback=?, are performed using JSONP unless the request includes jsonp: false in its request options. The JSON data is parsed in a strict manner; any malformed JSON is rejected and a parse error is thrown. As of jQuery 1.9, an empty response is also rejected; the server should return a response of null or {} instead. (See json.org for more information on proper JSON formatting.)
"jsonp": Loads in a JSON block using JSONP. Adds an extra "?callback=?" to the end of your URL to specify the callback. Disables caching by appending a query string parameter, "_=[TIMESTAMP]", to the URL unless the cache option is set to true.
"text": A plain text string
data
Type: PlainObject or String or Array
Data to be sent to the server. It is converted to a query string, if not already a string. 
It's appended to the url for GET-requests. See processData option to prevent this automatic processing. 
Object must be Key/Value pairs. If value is an Array, jQuery serializes multiple values with same key based on the value of the traditional setting (described below)
statusCode (default: {})
Type: PlainObject
An object of numeric HTTP codes and functions to be called when the response has the corresponding code. 
For example, the following will alert when the response status is a 404:

1
2
3
4
5
6
7
$.ajax({
  statusCode: {
    404: function() {
      alert( "page not found" );
    }
  }
});
